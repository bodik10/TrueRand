from PyQt4 import QtCore, QtGui
from config import *
from myThread import MyThread
from .resultTableClass import ResultTable

####### BEGIN UI code
# code generated by pyuic.bat (pyuic.bat -x spam.ui -o spam.py)
from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s

class Ui_MyWidget(object):
    def setupUi(self, MyWidget):
        MyWidget.setObjectName(_fromUtf8("MyWidget"))
        MyWidget.resize(802, 634)
        self.horizontalLayout = QtGui.QHBoxLayout(MyWidget)
        self.horizontalLayout.setObjectName(_fromUtf8("horizontalLayout"))
        self.gridLayout = QtGui.QGridLayout()
        self.gridLayout.setHorizontalSpacing(6)
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.groupParam = QtGui.QGroupBox(MyWidget)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupParam.sizePolicy().hasHeightForWidth())
        self.groupParam.setSizePolicy(sizePolicy)
        self.groupParam.setMinimumSize(QtCore.QSize(300, 0))
        self.groupParam.setMaximumSize(QtCore.QSize(300, 16777215))
        self.groupParam.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.groupParam.setFlat(False)
        self.groupParam.setCheckable(False)
        self.groupParam.setObjectName(_fromUtf8("groupParam"))
        self.verticalLayout_2 = QtGui.QVBoxLayout(self.groupParam)
        self.verticalLayout_2.setObjectName(_fromUtf8("verticalLayout_2"))
        self.groupConfig = QtGui.QGroupBox(self.groupParam)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Ignored, QtGui.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupConfig.sizePolicy().hasHeightForWidth())
        self.groupConfig.setSizePolicy(sizePolicy)
        self.groupConfig.setMinimumSize(QtCore.QSize(0, 100))
        self.groupConfig.setMaximumSize(QtCore.QSize(16777215, 100))
        self.groupConfig.setObjectName(_fromUtf8("groupConfig"))
        self.verticalLayout_3 = QtGui.QVBoxLayout(self.groupConfig)
        self.verticalLayout_3.setObjectName(_fromUtf8("verticalLayout_3"))
        self.checkLower = QtGui.QCheckBox(self.groupConfig)
        self.checkLower.setChecked(True)
        self.checkLower.setObjectName(_fromUtf8("checkLower"))
        self.verticalLayout_3.addWidget(self.checkLower)
        self.checkDigits = QtGui.QCheckBox(self.groupConfig)
        self.checkDigits.setObjectName(_fromUtf8("checkDigits"))
        self.verticalLayout_3.addWidget(self.checkDigits)
        self.checkUpper = QtGui.QCheckBox(self.groupConfig)
        self.checkUpper.setObjectName(_fromUtf8("checkUpper"))
        self.verticalLayout_3.addWidget(self.checkUpper)
        self.verticalLayout_2.addWidget(self.groupConfig)
        self.spinLen = QtGui.QSpinBox(self.groupParam)
        self.spinLen.setButtonSymbols(QtGui.QAbstractSpinBox.UpDownArrows)
        self.spinLen.setMinimum(1)
        self.spinLen.setMaximum(20)
        self.spinLen.setProperty("value", 8)
        self.spinLen.setObjectName(_fromUtf8("spinLen"))
        self.verticalLayout_2.addWidget(self.spinLen)
        self.spinNum = QtGui.QSpinBox(self.groupParam)
        self.spinNum.setButtonSymbols(QtGui.QAbstractSpinBox.UpDownArrows)
        self.spinNum.setMinimum(1)
        self.spinNum.setMaximum(10000)
        self.spinNum.setObjectName(_fromUtf8("spinNum"))
        self.verticalLayout_2.addWidget(self.spinNum)
        self.checkUnique = QtGui.QCheckBox(self.groupParam)
        self.checkUnique.setObjectName(_fromUtf8("checkUnique"))
        self.verticalLayout_2.addWidget(self.checkUnique)
        self.btnGenerate = QtGui.QPushButton(self.groupParam)
        self.btnGenerate.setObjectName(_fromUtf8("btnGenerate"))
        self.verticalLayout_2.addWidget(self.btnGenerate)
        self.gridLayout.addWidget(self.groupParam, 0, 0, 1, 1)
        self.frame = QtGui.QFrame(MyWidget)
        self.frame.setFrameShape(QtGui.QFrame.NoFrame)
        #self.frame.setFrameShadow(QtGui.QFrame.Raised)
        self.frame.setObjectName(_fromUtf8("frame"))
        self.horizontalLayout_3 = QtGui.QHBoxLayout(self.frame)
        self.horizontalLayout_3.setObjectName(_fromUtf8("horizontalLayout_3"))
        spacerItem = QtGui.QSpacerItem(20, 458, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.horizontalLayout_3.addItem(spacerItem)
        self.gridLayout.addWidget(self.frame, 1, 0, 1, 1)
        
        self.horizontalLayout.addLayout(self.gridLayout)

        self.retranslateUi(MyWidget)
        QtCore.QMetaObject.connectSlotsByName(MyWidget)

    def retranslateUi(self, MyWidget):
        MyWidget.setWindowTitle(QtGui.QApplication.translate("MyWidget", "Form", None, QtGui.QApplication.UnicodeUTF8))
        self.groupParam.setTitle(QtGui.QApplication.translate("MyWidget", "Parameters", None, QtGui.QApplication.UnicodeUTF8))
        self.groupConfig.setTitle(QtGui.QApplication.translate("MyWidget", "String configuration", None, QtGui.QApplication.UnicodeUTF8))
        self.checkLower.setText(QtGui.QApplication.translate("MyWidget", "lowercase alphabetic characters (a-z)", None, QtGui.QApplication.UnicodeUTF8))
        self.checkDigits.setText(QtGui.QApplication.translate("MyWidget", "digits (0-9)", None, QtGui.QApplication.UnicodeUTF8))
        self.checkUpper.setText(QtGui.QApplication.translate("MyWidget", "uppercase alphabetic characters (A-Z)", None, QtGui.QApplication.UnicodeUTF8))
        self.spinLen.setPrefix(QtGui.QApplication.translate("MyWidget", "length - ", None, QtGui.QApplication.UnicodeUTF8))
        self.spinNum.setPrefix(QtGui.QApplication.translate("MyWidget", "number of strings - ", None, QtGui.QApplication.UnicodeUTF8))
        self.checkUnique.setText(QtGui.QApplication.translate("MyWidget", "Generate only unique strings", None, QtGui.QApplication.UnicodeUTF8))
        self.btnGenerate.setText(QtGui.QApplication.translate("MyWidget", "Generate", None, QtGui.QApplication.UnicodeUTF8))

    ####### END UI code
   
class MyWidget(QtGui.QWidget, Ui_MyWidget, ResultTable):
    def __init__(self, parent=None, master=None):
        QtGui.QWidget.__init__(self, parent)
        self.master = master
        self.error = self.result = self.model = None
        
        self.column = 1
        
        self.setupUi(self)          # set UI (method from Ui_MyWidget)
        ResultTable.__init__(self)  # set UI for result group widget (result table etc...)
        
        self.btnGenerate.clicked.connect(self.generate)

        self.spinCol.valueChanged["int"].connect(self.changeColumn)
        self.btnClear.clicked.connect(self.clearTable)
        self.btnCopy.clicked.connect(self.copyResult)
        self.btnSave.clicked.connect(self.saveResult)
        
        self.thread = MyThread(self, self.getRandom)
        self.thread.finished.connect(self.errorHandler)

    def generate(self):
        self.btnGenerate.setDisabled(True)
        self.thread.start()
        
    def getRandom(self):
        result = self.master.random.strings(num         = self.spinNum.value(),
                                            len         = self.spinLen.value(),
                                            loweralpha  = "on" if self.checkLower.isChecked() else "off",
                                            digits      = "on" if self.checkDigits.isChecked() else "off",
                                            upperalpha  = "on" if self.checkUpper.isChecked() else "off",
                                            unique      = "on" if self.checkUnique.isChecked() else "off",
                                            format='plain', rnd='new')
        if self.checkAdd.isChecked() and type(self.result) is list:
            self.result.extend(result)
        else:
            self.result = result
        # print(self.result)
        self.makeTable()

    def log(self, error=None):
        from time import strftime
        self.master.logs.addRow(strftime("%d-%m-%Y"),
                                strftime("%H:%M:%S"),
                                self.master.random.__class__.__name__,
                                "Strings Generator",
                                error if error else "Generated: num=%s len=%s" % (self.spinNum.value(),
                                                                                  self.spinLen.value()))
