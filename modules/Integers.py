from PyQt4 import QtCore, QtGui
from config import *
from myThread import MyThread
from .resultTableClass import ResultTable

####### BEGIN UI code
# code generated by pyuic.bat (pyuic.bat -x spam.ui -o spam.py)
try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s
    
class Ui_MyWidget(object):
    def setupUi(self, MyWidget):
        MyWidget.setObjectName(_fromUtf8("MyWidget"))
        MyWidget.resize(769, 617)
        self.horizontalLayout = QtGui.QHBoxLayout(MyWidget)
        self.horizontalLayout.setObjectName(_fromUtf8("horizontalLayout"))
        self.gridLayout = QtGui.QGridLayout()
        self.gridLayout.setHorizontalSpacing(6)
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.groupParam = QtGui.QGroupBox(MyWidget)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupParam.sizePolicy().hasHeightForWidth())
        self.groupParam.setSizePolicy(sizePolicy)
        self.groupParam.setMinimumSize(QtCore.QSize(300, 0))
        self.groupParam.setMaximumSize(QtCore.QSize(300, 16777215))
        self.groupParam.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.groupParam.setFlat(False)
        self.groupParam.setCheckable(False)
        self.groupParam.setObjectName(_fromUtf8("groupParam"))
        self.verticalLayout_2 = QtGui.QVBoxLayout(self.groupParam)
        self.verticalLayout_2.setObjectName(_fromUtf8("verticalLayout_2"))
        self.groupBase = QtGui.QGroupBox(self.groupParam)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Ignored, QtGui.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBase.sizePolicy().hasHeightForWidth())
        self.groupBase.setSizePolicy(sizePolicy)
        self.groupBase.setMinimumSize(QtCore.QSize(0, 50))
        self.groupBase.setMaximumSize(QtCore.QSize(16777215, 50))
        self.groupBase.setObjectName(_fromUtf8("groupBase"))
        self.horizontalLayout_2 = QtGui.QHBoxLayout(self.groupBase)
        self.horizontalLayout_2.setObjectName(_fromUtf8("horizontalLayout_2"))
        self.radioBin = QtGui.QRadioButton(self.groupBase)
        self.radioBin.setChecked(False)
        self.radioBin.setObjectName(_fromUtf8("radioBin"))
        self.horizontalLayout_2.addWidget(self.radioBin)
        self.radioOct = QtGui.QRadioButton(self.groupBase)
        self.radioOct.setChecked(False)
        self.radioOct.setObjectName(_fromUtf8("radioOct"))
        self.horizontalLayout_2.addWidget(self.radioOct)
        self.radioDec = QtGui.QRadioButton(self.groupBase)
        self.radioDec.setChecked(True)
        self.radioDec.setObjectName(_fromUtf8("radioDec"))
        self.horizontalLayout_2.addWidget(self.radioDec)
        self.radioHex = QtGui.QRadioButton(self.groupBase)
        self.radioHex.setObjectName(_fromUtf8("radioHex"))
        self.horizontalLayout_2.addWidget(self.radioHex)
        self.verticalLayout_2.addWidget(self.groupBase)
        self.horizontalLayout_4 = QtGui.QHBoxLayout()
        self.horizontalLayout_4.setSpacing(6)
        self.horizontalLayout_4.setObjectName(_fromUtf8("horizontalLayout_4"))
        self.label = QtGui.QLabel(self.groupParam)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setObjectName(_fromUtf8("label"))
        self.horizontalLayout_4.addWidget(self.label)
        self.comboPresets = QtGui.QComboBox(self.groupParam)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboPresets.sizePolicy().hasHeightForWidth())
        self.comboPresets.setSizePolicy(sizePolicy)
        self.comboPresets.setObjectName(_fromUtf8("comboPresets"))
        self.horizontalLayout_4.addWidget(self.comboPresets)
        self.verticalLayout_2.addLayout(self.horizontalLayout_4)
        self.spinMin = QtGui.QSpinBox(self.groupParam)
        self.spinMin.setButtonSymbols(QtGui.QAbstractSpinBox.UpDownArrows)
        self.spinMin.setSuffix(_fromUtf8(""))
        self.spinMin.setMinimum(-1e9)
        self.spinMin.setMaximum(1e9)
        self.spinMin.setObjectName(_fromUtf8("spinMin"))
        self.verticalLayout_2.addWidget(self.spinMin)
        self.spinMax = QtGui.QSpinBox(self.groupParam)
        self.spinMax.setButtonSymbols(QtGui.QAbstractSpinBox.UpDownArrows)
        self.spinMax.setMinimum(-1e9)
        self.spinMax.setMaximum(1e9)
        self.spinMax.setProperty("value", 10)
        self.spinMax.setObjectName(_fromUtf8("spinMax"))
        self.verticalLayout_2.addWidget(self.spinMax)
        self.spinNum = QtGui.QSpinBox(self.groupParam)
        self.spinNum.setButtonSymbols(QtGui.QAbstractSpinBox.UpDownArrows)
        self.spinNum.setMinimum(1)
        self.spinNum.setMaximum(10000)
        self.spinNum.setObjectName(_fromUtf8("spinNum"))
        self.verticalLayout_2.addWidget(self.spinNum)
        self.btnGenerate = QtGui.QPushButton(self.groupParam)
        self.btnGenerate.setObjectName(_fromUtf8("btnGenerate"))
        self.verticalLayout_2.addWidget(self.btnGenerate)
        self.gridLayout.addWidget(self.groupParam, 0, 0, 1, 1)
        self.frame = QtGui.QFrame(MyWidget)
        self.frame.setFrameShape(QtGui.QFrame.NoFrame)
        #self.frame.setFrameShadow(QtGui.QFrame.Raised)
        self.frame.setObjectName(_fromUtf8("frame"))
        self.horizontalLayout_3 = QtGui.QHBoxLayout(self.frame)
        self.horizontalLayout_3.setObjectName(_fromUtf8("horizontalLayout_3"))
        spacerItem = QtGui.QSpacerItem(20, 458, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.horizontalLayout_3.addItem(spacerItem)
        self.gridLayout.addWidget(self.frame, 1, 0, 1, 1)
        
        self.horizontalLayout.addLayout(self.gridLayout)

        self.retranslateUi(MyWidget)
        QtCore.QMetaObject.connectSlotsByName(MyWidget)

    def retranslateUi(self, MyWidget):
        MyWidget.setWindowTitle(QtGui.QApplication.translate("MyWidget", "Form", None, QtGui.QApplication.UnicodeUTF8))
        self.groupParam.setTitle(QtGui.QApplication.translate("MyWidget", "Parameters", None, QtGui.QApplication.UnicodeUTF8))
        self.groupBase.setTitle(QtGui.QApplication.translate("MyWidget", "Base", None, QtGui.QApplication.UnicodeUTF8))
        self.radioBin.setText(QtGui.QApplication.translate("MyWidget", "bin (2)", None, QtGui.QApplication.UnicodeUTF8))
        self.radioOct.setText(QtGui.QApplication.translate("MyWidget", "oct (8)", None, QtGui.QApplication.UnicodeUTF8))
        self.radioDec.setText(QtGui.QApplication.translate("MyWidget", "dec (10)", None, QtGui.QApplication.UnicodeUTF8))
        self.radioHex.setText(QtGui.QApplication.translate("MyWidget", "hex (16)", None, QtGui.QApplication.UnicodeUTF8))
        self.label.setText(QtGui.QApplication.translate("MyWidget", "Use presets:", None, QtGui.QApplication.UnicodeUTF8))
        self.spinMin.setPrefix(QtGui.QApplication.translate("MyWidget", "min - ", None, QtGui.QApplication.UnicodeUTF8))
        self.spinMax.setPrefix(QtGui.QApplication.translate("MyWidget", "max - ", None, QtGui.QApplication.UnicodeUTF8))
        self.spinNum.setPrefix(QtGui.QApplication.translate("MyWidget", "numbers - ", None, QtGui.QApplication.UnicodeUTF8))
        self.btnGenerate.setText(QtGui.QApplication.translate("MyWidget", "Generate", None, QtGui.QApplication.UnicodeUTF8))
        
####### END UI code
   
class MyWidget(QtGui.QWidget, Ui_MyWidget, ResultTable):
    def __init__(self, parent=None, master=None):
        QtGui.QWidget.__init__(self, parent)
        self.master = master
        self.error = self.result = self.model = None
        
        self.base = "10"
        self.column = 1
        
        self.setupUi(self)          # set UI (method from Ui_MyWidget)
        ResultTable.__init__(self)  # set UI for result group widget (result table etc...)
        
        self.fillPresetsList()
        
        self.btnGenerate.clicked.connect(self.generate)
        self.radioBin.clicked.connect(lambda: setattr(self, "base", "2")) # in lambda can't use '=' operator
        self.radioOct.clicked.connect(lambda: setattr(self, "base", "8"))
        self.radioDec.clicked.connect(lambda: setattr(self, "base", "10"))
        self.radioHex.clicked.connect(lambda: setattr(self, "base", "16"))
        self.comboPresets.activated["int"].connect(self.setPreset)
        
        self.thread = MyThread(self, self.getRandom)
        self.thread.finished.connect(self.errorHandler)

    def fillPresetsList(self):
        for preset in PRESETS["Integers"]:
            title = "%s - %s" % (preset, repr(PRESETS["Integers"][preset]))
            self.comboPresets.addItem(title, PRESETS["Integers"][preset])

    def setPreset(self, index):
        if index == 0: return
        # tuple stored in comboBox itemData - (a, b) where a-min, b-max
        self.spinMin.setValue(self.comboPresets.itemData(index)[0])
        self.spinMax.setValue(self.comboPresets.itemData(index)[1])

    def generate(self):
        self.btnGenerate.setDisabled(True)
        self.thread.start()
        
    def getRandom(self):
        result = self.master.random.integers(num=self.spinNum.value(),
                                             min=self.spinMin.value(),
                                             max=self.spinMax.value(),
                                             base=self.base,
                                             col=1, format='plain', rnd='new')
        if self.checkAdd.isChecked() and type(self.result) is list:
            self.result.extend(result)
        else:
            self.result = result
        # print(self.result)
        self.makeTable()

    def log(self, error=None):
        from time import strftime
        self.master.logs.addRow(strftime("%d-%m-%Y"),
                                strftime("%H:%M:%S"),
                                self.master.random.__class__.__name__,
                                "Integers Generator",
                                error if error else "Generated: num=%s min=%s max=%s" % (self.spinNum.value(),
                                                                                         self.spinMin.value(),
                                                                                         self.spinMax.value()))
